Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o (exit)
/usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
LOAD main.o
LOAD adc.o
LOAD /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/libm.a
LOAD /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/libc.a
LOAD /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000       0x98
 *(.vectors)
 .vectors       0x00000000       0x14 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000014                . = ALIGN (0x2)
                0x00000014                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000014        0x0 linker stubs
 *(.trampolines*)
                0x00000014                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000014                __ctors_start = .
 *(.ctors)
                0x00000014                __ctors_end = .
                0x00000014                __dtors_start = .
 *(.dtors)
                0x00000014                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000014        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
                0x00000014                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000014        0x8 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000001c       0x16 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_copy_data.o)
                0x0000001c                __do_copy_data
 .init4         0x00000032       0x10 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_clear_bss.o)
                0x00000032                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000042        0x4 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
 *(.init9)
 *(.text)
 .text          0x00000046        0x2 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
                0x00000046                __vector_1
                0x00000046                __bad_interrupt
                0x00000046                __vector_6
                0x00000046                __vector_3
                0x00000046                __vector_7
                0x00000046                __vector_5
                0x00000046                __vector_4
                0x00000046                __vector_9
                0x00000046                __vector_2
                0x00000046                __vector_8
 .text          0x00000048       0x28 main.o
                0x00000048                main
                0x0000006a                init_tiny
 .text          0x00000070       0x24 adc.o
                0x00000070                adc
 .text          0x00000094        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_exit.o)
 .text          0x00000094        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_copy_data.o)
 .text          0x00000094        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_clear_bss.o)
                0x00000094                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000094        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_exit.o)
 .text.libgcc   0x00000094        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000094        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_clear_bss.o)
                0x00000094                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000094        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_exit.o)
                0x00000094                exit
                0x00000094                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000094        0x4 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_exit.o)
 *(.fini0)
                0x00000098                _etext = .

.data           0x00800060        0x0 load address 0x00000098
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
 .data          0x00800060        0x0 main.o
 .data          0x00800060        0x0 adc.o
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_exit.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_copy_data.o)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0x7 load address 0x00000098
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
 .bss           0x00800060        0x7 main.o
                0x00800066                x
                0x00800060                result1
                0x00800062                result2
                0x00800064                diff
 .bss           0x00800067        0x0 adc.o
 .bss           0x00800067        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_exit.o)
 .bss           0x00800067        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_copy_data.o)
 .bss           0x00800067        0x0 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x00800067                PROVIDE (__bss_end, .)
                0x00000098                __data_load_start = LOADADDR (.data)
                0x00000098                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800067        0x0
                0x00800067                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800067                PROVIDE (__noinit_end, .)
                0x00800067                _end = .
                0x00800067                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0x69c
 *(.stab)
 .stab          0x00000000      0x69c /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o

.stabstr        0x00000000       0x54
 *(.stabstr)
 .stabstr       0x00000000       0x54 /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x40
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 main.o
 .debug_aranges
                0x00000020       0x20 adc.o

.debug_pubnames
                0x00000000       0x6a
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x50 main.o
 .debug_pubnames
                0x00000050       0x1a adc.o

.debug_info     0x00000000      0x29e
 *(.debug_info)
 .debug_info    0x00000000      0x1ed main.o
 .debug_info    0x000001ed       0xb1 adc.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x1a1
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x12c main.o
 .debug_abbrev  0x0000012c       0x75 adc.o

.debug_line     0x00000000      0x221
 *(.debug_line)
 .debug_line    0x00000000      0x160 main.o
 .debug_line    0x00000160       0xc1 adc.o

.debug_frame    0x00000000       0x50
 *(.debug_frame)
 .debug_frame   0x00000000       0x30 main.o
 .debug_frame   0x00000030       0x20 adc.o

.debug_str      0x00000000      0x112
 *(.debug_str)
 .debug_str     0x00000000       0xfb main.o
                                0x12f (size before relaxing)
 .debug_str     0x000000fb       0x17 adc.o
                                 0xc9 (size before relaxing)

.debug_loc      0x00000000       0x43
 *(.debug_loc)
 .debug_loc     0x00000000       0x18 main.o
 .debug_loc     0x00000018       0x2b adc.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0x48
 .debug_ranges  0x00000000       0x48 main.o

Cross Reference Table

Symbol                                            File
__bad_interrupt                                   /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__bss_end                                         /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_clear_bss.o)
                                                  adc.o
                                                  main.o
__do_copy_data                                    /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_copy_data.o)
                                                  adc.o
                                                  main.o
__heap_end                                        /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__init                                            /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__stack                                           /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__vector_1                                        /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__vector_2                                        /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__vector_3                                        /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__vector_4                                        /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__vector_5                                        /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__vector_6                                        /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__vector_7                                        /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__vector_8                                        /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__vector_9                                        /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__vector_default                                  /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
__vectors                                         /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
_exit                                             /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_exit.o)
adc                                               adc.o
diff                                              main.o
exit                                              /usr/lib/gcc/avr/4.3.3/avr25/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
init_tiny                                         main.o
main                                              main.o
                                                  /usr/lib/gcc/avr/4.3.3/../../../avr/lib/avr25/crttn13.o
result1                                           main.o
result2                                           main.o
x                                                 main.o
